swagger: "2.0"
info:
  version: "1.0.0"
  title: "Mate Exam API"
  description: "A simple API to give test exams to students"
host: "agentmate.herokuapp.com"
basePath: "/api/v1"
tags:
- name: "students"
  description: "students"
- name: "exams"
  description: "exam question sheets"
- name: "results"
  description: "submitting and reading exam results of students"
schemes:
- "https"
paths:
  /students:
    get:
      tags:
      - "students"
      summary: "Get list of all students"
      operationId: "getStudents"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Student"
    post:
      tags:
      - "students"
      summary: "Create a new student"
      operationId: "createStudent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Student object that needs to be created. _id does not need to be provided. If not provided it will be generated server side and returned in the response."
        required: true
        schema:
          $ref: "#/definitions/Student"
      responses:
            200:
              description: "successful operation"
              schema:
                $ref: "#/definitions/Student"
  /students/{id}:
    get:
      tags:
      - "students"
      summary: "Get a student by id"
      operationId: "getStudentById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of student to return"
        required: true
        type: "string"
        format: "hexadecimal"
        example: "5ad289124c9956964c868f2b"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Student"
    delete:
      tags:
      - "students"
      summary: "Delete a student by id"
      operationId: "deleteStudentById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of student to delete"
        required: true
        type: "string"
        format: "hexadecimal"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
  /exams:
    get:
     tags:
     - "exams"
     summary: "Get list of exams. Optionally you can filter by subjectCode and variant"
     operationId: "getExams"
     produces:
     - "application/json"
     parameters:
     - name: "subjectCode"
       in: "query"
       description: "The subject code of the exam"
       type: "string"
       example: "01"
     - name: "variant"
       in: "query"
       description: "The variant of the exam on the given subject"
       type: "string"
       example: "Б"
     responses:
       200:
         description: "successful operation"
         schema:
           type: "array"
           items:
             $ref: "#/definitions/Exam"
    post:
     tags:
     - "exams"
     summary: "Create a new exam"
     operationId: "createExam"
     consumes:
     - "application/json"
     produces:
     - "application/json"
     parameters:
     - name: "body"
       in: "body"
       description: "Exam object that needs to be created. _id does not need to be provided. If not provided it will be generated server side and returned in the response."
       required: true
       schema:
         $ref: "#/definitions/Exam"
     responses:
           200:
             description: "successful operation"
             schema:
               $ref: "#/definitions/Exam"
  /exams/{id}:
    get:
      tags:
      - "exams"
      summary: "Get an exam by id"
      operationId: "getExamById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of exam to return"
        required: true
        type: "string"
        format: "hexadecimal"
        example: "5acdac93734d1d55c319d2c4"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Exam"
    delete:
      tags:
      - "exams"
      summary: "Delete a exam by id"
      operationId: "deleteExamById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of exam to delete"
        required: true
        type: "string"
        format: "hexadecimal"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
  /results:
    get:
     tags:
     - "exams"
     summary: "Get list of exams. Optionally you can filter by subjectCode and variant"
     operationId: "getExams"
     produces:
     - "application/json"
     parameters:
     - name: "subjectCode"
       in: "query"
       description: "The subject code of the exam"
       type: "string"
       example: "01"
     - name: "variant"
       in: "query"
       description: "The variant of the exam on the given subject"
       type: "string"
       example: "Б"
     responses:
       200:
         description: "successful operation"
         schema:
           type: "array"
           items:
             $ref: "#/definitions/Exam"
    post:
     tags:
     - "exams"
     summary: "Create a new exam"
     operationId: "createExam"
     consumes:
     - "application/json"
     produces:
     - "application/json"
     parameters:
     - name: "body"
       in: "body"
       description: "Exam object that needs to be created. _id does not need to be provided. If not provided it will be generated server side and returned in the response."
       required: true
       schema:
         $ref: "#/definitions/Exam"
     responses:
           200:
             description: "successful operation"
             schema:
               $ref: "#/definitions/Exam"


definitions:
  Student:
    type: "object"
    properties:
      _id:
        type: "string"
        format: "hexadecimal"
        description: "mLab generated mongodb field"
        example: "12312d1231b"
        required: false
      name:
        type: "string"
        format: "First Middle Last"
        description: "Full name of the student"
        example: "Христо Евлогиев Георгиев"
      phone:
        type: "string"
        example: "032/222222"
      address:
        type: "string"
        example: "ул. Възрожденска 1А, Пловдив, 4000"
    xml:
      name: "Student"

  Exam:
    type: "object"
    properties:
      _id:
        type: "string"
        format: "hexadecimal"
        description: "mLab generated mongodb field"
        example: "12312d1231a"
        required: false
      subjectCode:
        type: "string"
        format: "integer"
        description: "short code of the studied subject"
        example: "01"
      subjectName:
        type: "string"
        description: "name of the studied subject"
        example: "Правилник за движение по пътишата"
      variant:
        type: "string"
        description: "A different exam variant usually means a different subset of questions or reordered questions. Test variants are used to reduce risk of cheating and to focus on specific subject areas"
        example: "Б"
      map:
        type: "object"
        description: "TODO description, for now empty object"
        example: {}
      questions:
        type: "array"
        items:
          $ref: "#/definitions/Question"
    xml:
      name: "Exam"

  Result:
    type: "object"
    properties:
      _id:
        type: "string"
        format: "hexadecimal"
        description: "mLab generated mongodb field"
        example: "12312d1231e"
        required: false
      student:
        $ref: "#/definitions/Student"
      exam:
        $ref: "#/definitions/Exam"
      dateStarted:
        type: "string"
        format: "date-time"
        description: "date-time in UTC/GMT at which the student started the exam i.e. the result document was created."
        example: "2018-04-14T22:19:59.409Z"
      dateFinished:
        type: "string"
        format: "date-time"
        description: "date-time in UTC/GMT at which the student finished the exam i.e. the result document has been completed and final scoring has been calculated."
        example: "2018-04-14T22:21:26.054Z"
      questions:
        type: "array"
        items:
          $ref: "#/definitions/Question"
    xml:
      name: "Result"

  Question:
    type: "object"
    properties:
      _id:
        type: "string"
        format: "usually a number"
        example: "1"
        required: false
      text:
        type: "string"
        description: "The text of the actual question"
        example: "Колко е дълга река Нил?"
      correctAnswer:
        type: "string"
        description: "The id (usually letter) of the correct answer"
        example: "в"
      givenAnswer:
        type: "string"
        description: "The id (usually letter) of the given answer by the student"
        example: "г"
      answers:
        type: "array"
        items:
          $ref: "#/definitions/Answer"
    xml:
      name: "Question"

  Answer:
    type: "object"
    properties:
      _id:
        type: "string"
        format: "usually a letter"
        example: "б"
        required: false
      text:
        type: "string"
        description: "The text of the answer"
        example: "Река нил е 2000КМ"
    xml:
      name: "Answer"