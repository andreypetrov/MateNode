/**
 * Mate Exam API
 * A simple API to give test exams to students. Flow for an exam is like so: 1. Pick a student. 2. Pick an exam. 3. Create result for chosen student and exam. 4. Answer questions. 5. Finish result.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Answer', 'model/AnswerRequest', 'model/Exam', 'model/FinishResultRequest', 'model/Question', 'model/Result', 'model/StartResultRequest', 'model/Student', 'api/ExamsApi', 'api/ResultsApi', 'api/StudentsApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Answer'), require('./model/AnswerRequest'), require('./model/Exam'), require('./model/FinishResultRequest'), require('./model/Question'), require('./model/Result'), require('./model/StartResultRequest'), require('./model/Student'), require('./api/ExamsApi'), require('./api/ResultsApi'), require('./api/StudentsApi'));
  }
}(function(ApiClient, Answer, AnswerRequest, Exam, FinishResultRequest, Question, Result, StartResultRequest, Student, ExamsApi, ResultsApi, StudentsApi) {
  'use strict';

  /**
   * A_simple_API_to_give_test_exams_to_students__Flow_for_an_exam_is_like_so_1__Pick_a_student__2__Pick_an_exam__3__Create_result_for_chosen_student_and_exam__4__Answer_questions__5__Finish_result_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var MateExamApi = require('index'); // See note below*.
   * var xxxSvc = new MateExamApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new MateExamApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new MateExamApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new MateExamApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Answer model constructor.
     * @property {module:model/Answer}
     */
    Answer: Answer,
    /**
     * The AnswerRequest model constructor.
     * @property {module:model/AnswerRequest}
     */
    AnswerRequest: AnswerRequest,
    /**
     * The Exam model constructor.
     * @property {module:model/Exam}
     */
    Exam: Exam,
    /**
     * The FinishResultRequest model constructor.
     * @property {module:model/FinishResultRequest}
     */
    FinishResultRequest: FinishResultRequest,
    /**
     * The Question model constructor.
     * @property {module:model/Question}
     */
    Question: Question,
    /**
     * The Result model constructor.
     * @property {module:model/Result}
     */
    Result: Result,
    /**
     * The StartResultRequest model constructor.
     * @property {module:model/StartResultRequest}
     */
    StartResultRequest: StartResultRequest,
    /**
     * The Student model constructor.
     * @property {module:model/Student}
     */
    Student: Student,
    /**
     * The ExamsApi service constructor.
     * @property {module:api/ExamsApi}
     */
    ExamsApi: ExamsApi,
    /**
     * The ResultsApi service constructor.
     * @property {module:api/ResultsApi}
     */
    ResultsApi: ResultsApi,
    /**
     * The StudentsApi service constructor.
     * @property {module:api/StudentsApi}
     */
    StudentsApi: StudentsApi
  };

  return exports;
}));
